<?php

/**
 * @file
 * Hooks and callbacks for this module.
 */

/**
 * Implements hook_theme().
 */
function islandora_chemistry_theme($existing, $type, $theme, $path) {
  return array(
    'islandora_chemistry' => array(
      'template' => 'theme/islandora-chemistry',
      'pattern' => 'islandora_chemistry__',
      'variables' => array('islandora_object' => NULL),
      'file' => 'theme/theme.inc',
    ),
  );
}

/**
 * Implements hook_islandora_required_objects().
 */
function islandora_chemistry_islandora_required_objects(IslandoraTuque $connection) {
  $module_path = drupal_get_path('module', 'islandora_chemistry');
  // Chemistry Content Model.
  $chemistry_model = $connection->repository->constructObject('islandora:sp_chem_CM');
  $chemistry_model->owner = 'fedoraAdmin';
  $chemistry_model->label = 'Islandora Chemistry Content Model';
  $chemistry_model->models = 'fedora-system:ContentModel-3.0';
  // DS-COMPOSITE-MODEL Datastream.
  $datastream = $chemistry_model->constructDatastream('DS-COMPOSITE-MODEL', 'X');
  $datastream->label = 'DS-COMPOSITE-MODEL';
  $datastream->mimetype = 'text/xml';
  $datastream->setContentFromFile("$module_path/xml/islandora_chemistry_ds_composite_model.xml", FALSE);
  $chemistry_model->ingestDatastream($datastream);
  // Chemistry Collection.
  $chemistry_collection = $connection->repository->constructObject('islandora:chemistry_collection');
  $chemistry_collection->owner = 'fedoraAdmin';
  $chemistry_collection->label = 'Chemistry Collection';
  $chemistry_collection->models = 'islandora:collectionCModel';
  $chemistry_collection->relationships->add(FEDORA_RELS_EXT_URI, 'isMemberOfCollection', 'islandora:root');
  // Collection Policy Datastream.
  $datastream = $chemistry_collection->constructDatastream('COLLECTION_POLICY', 'X');
  $datastream->label = 'Collection policy';
  $datastream->mimetype = 'text/xml';
  $datastream->setContentFromFile("$module_path/xml/islandora_chemistry_collection_policy.xml", FALSE);
  $chemistry_collection->ingestDatastream($datastream);
  // TN Datastream.
  $datastream = $chemistry_collection->constructDatastream('TN', 'M');
  $datastream->label = 'Thumbnail';
  $datastream->mimetype = 'image/png';
  $datastream->setContentFromFile("$module_path/images/folder.png", FALSE);
  $chemistry_collection->ingestDatastream($datastream);
  return array(
    'islandora_chemistry' => array(
      'title' => 'Islandora Chemistry',
      'objects' => array(
        $chemistry_model,
        $chemistry_collection,
      ),
    ),
  );
}

/**
 * Implements hook_islandora_xml_form_builder_forms().
 */
function islandora_chemistry_islandora_xml_form_builder_forms() {
  $message = islandora_deprecated('7.x-1.8', t('Use xml_form_builder_forms instead.'));
  trigger_error(filter_xss($message), E_USER_DEPRECATED);
  $module_path = drupal_get_path('module', 'islandora_chemistry');
  return array(
    'Chemistry MODS form' => array(
      'form_file' => "$module_path/xml/islandora_chemistry_form_mods.xml",
    ),
  );
}

/**
 * Implements hook_islandora_xml_form_builder_form_associations().
 */
function islandora_chemistry_islandora_xml_form_builder_form_associations() {
  $message = islandora_deprecated('7.x-1.8', t('Use xml_form_builder_form_associations instead.'));
  trigger_error(filter_xss($message), E_USER_DEPRECATED);
  return array(
    'islandora_chemistry_mods_form' => array(
      'content_model' => 'islandora:sp_chem_CM',
      'form_name' => 'Chemistry MODS form',
      'dsid' => 'MODS',
      'title_field' => NULL,
      'transform' => 'mods_to_dc.xsl',
      'template' => FALSE,
    ),
  );
}

/**
 * Implements hook_xml_form_builder_forms().
 */
function islandora_chemistry_xml_form_builder_forms() {
  $module_path = drupal_get_path('module', 'islandora_chemistry');
  return array(
    'Chemistry MODS form' => array(
      'form_file' => "$module_path/xml/islandora_chemistry_form_mods.xml",
    ),
  );
}

/**
 * Implements hook_xml_form_builder_form_associations().
 */
function islandora_chemistry_xml_form_builder_form_associations() {
  return array(
    'islandora_chemistry_mods_form' => array(
      'content_model' => 'islandora:sp_chem_CM',
      'form_name' => 'Chemistry MODS form',
      'dsid' => 'MODS',
      'title_field' => NULL,
      'transform' => 'mods_to_dc.xsl',
      'template' => FALSE,
    ),
  );
}

/**
 * Implements hook_islandora_ingest_steps().
 */
function islandora_chemistry_islandora_sp_chem_CM_islandora_ingest_steps() {
  return array(
    'chemistry_upload' => array(
      'weight' => 10,
      'type' => 'form',
      'form_id' => 'islandora_chemistry_upload_form',
      'module' => 'islandora_chemistry',
      'file' => 'includes/chemistry_upload.form.inc',
    ),
  );
}

/**
 * Implements hook_CMODEL_PID_islandora_view_object().
 */
function islandora_chemistry_islandora_sp_chem_CM_islandora_view_object($object, $page_number, $page_size) {
  return array(
    'islandora_chemistry' => array(
      '#type' => 'markup',
      '#theme' => 'islandora_chemistry',
      '#islandora_object' => $object,
    ),
  );
}

/**
 * Access callback for 3D molecule view.
 *
 * @param AbstractObject $object
 *   The object in which the MOL file belongs to.
 *
 * @return bool
 *   TRUE if the tab should be displayed; otherwise, FALSE.
 */
function islandora_chemistry_3d_view_access(AbstractObject $object) {
  return isset($object['MOL']) && in_array('islandora:sp_chem_CM', $object->models) &&  islandora_datastream_access(ISLANDORA_VIEW_OBJECTS, $object['MOL']);
}

/**
 * Access callback for output view.
 *
 * @param AbstractObject $object
 *   The object in to check.
 * @param string $dsid
 *   The datastream to check.
 *
 * @return bool
 *   TRUE if the tab should be displayed; otherwise, FALSE.
 */
function islandora_chemistry_output_view_access(AbstractObject $object, $dsid) {
  return in_array('islandora:sp_chem_CM', $object->models) &&  islandora_datastream_access(ISLANDORA_VIEW_OBJECTS, $object[$dsid]);
}

/**
 * Implements hook_block_info().
 */
function islandora_chemistry_block_info() {
  return array(
    'islandora_chemistry_upload' => array(
      'info' => t('Islandora Chemistry Upload A File'),
      'cache' => DRUPAL_NO_CACHE,
    ),
    'structure_search' => array(
      'info' => t('Islandora Chemistry Structure Search'),
      'cache' => DRUPAL_NO_CACHE,
    ),
  );
}

/**
 * Implements hook_block_view().
 */
function islandora_chemistry_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'islandora_chemistry_upload':
      if (user_access(ISLANDORA_INGEST)) {
        module_load_include('inc', 'islandora_chemistry', 'includes/blocks');
        $block['subject'] = t('Upload Structures');
        $block['content'] = drupal_get_form('islandora_chemistry_upload_file_form');
      }
      break;

    case 'structure_search':
      if (user_access('search islandora solr')) {
        module_load_include('inc', 'islandora_chemistry', 'includes/blocks');
        $block['subject'] = t('Structure Search');
        $block['content'] = drupal_get_form('islandora_chemistry_structure_search_form');
      }
      break;
  }
  return $block;
}

/**
 * Implements hook_menu().
 */
function islandora_chemistry_menu() {
  $items = array();

  $datastream_views = array(
    'source' => array(
      // @codingStandardsIgnoreStart
      // XXX: Overly cautious sniffs flagging craziness in coder...
      t('Source'),
      // @codingStandardsIgnoreEnd
      'OBJ',
    ),
    'cml' => array(
      // @codingStandardsIgnoreStart
      // XXX: Overly cautious sniffs flagging craziness in coder...
      t('CML'),
      // @codingStandardsIgnoreEnd
      'CML',
    ),
    'code' => array(
      // @codingStandardsIgnoreStart
      // XXX: Overly cautious sniffs flagging craziness in coder...
      t('Code'),
      // @codingStandardsIgnoreEnd
      'CODE',
    ),
  );
  foreach ($datastream_views as $path_suffix => $info) {
    list($title, $dsid) = $info;
    $items["islandora/object/%islandora_object/chemistry/$path_suffix"] = array(
      'title' => '@title',
      'title arguments' => array('@title' => $title),
      'page callback' => 'islandora_chemistry_datastream_view',
      'page arguments' => array(2, $dsid),
      'access callback' => 'islandora_chemistry_output_view_access',
      'access arguments' => array(2, $dsid),
      'type' => MENU_LOCAL_TASK,
      'file' => 'includes/output-view.tab.inc',
    );
  }
  $items['admin/islandora/solution_pack_config/chemistry'] = array(
    'title' => 'Chemistry Solution Pack',
    'description' => 'Configure Islandora Chemistry solution pack.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_chemistry_admin_settings_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/admin.form.inc',
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Implements hook_CMODEL_PID_islandora_derivative().
 */
function islandora_chemistry_islandora_sp_chem_cm_islandora_derivative() {
  $derivatives = array();

  $module_path = drupal_get_path('module', 'islandora_chemistry');

  $derivatives['islandora_chemistry_label'] = array(
    'source_dsid' => 'OBJ',
    'destination_dsid' => NULL,
    'weight' => -1,
    'function' => array(
      'islandora_chemistry_set_object_label',
    ),
    'file' => "$module_path/includes/derivatives.inc",
  );
  $derivatives['islandora_chemistry_mol'] = array(
    'source_dsid' => 'OBJ',
    'destination_dsid' => 'MOL',
    'weight' => 0,
    'function' => array(
      'islandora_chemistry_derive_mol',
    ),
    'file' => "$module_path/includes/derivatives.inc",
  );
  $derivatives['islandora_chemistry_cml'] = array(
    'source_dsid' => 'OBJ',
    'destination_dsid' => 'CML',
    'weight' => 1,
    'function' => array(
      'islandora_chemistry_derive_cml',
    ),
    'file' => "$module_path/includes/derivatives.inc",
  );
  $derivatives['islandora_chemistry_medium'] = array(
    'source_dsid' => 'OBJ',
    'destination_dsid' => 'MEDIUM',
    'weight' => 2,
    'function' => array(
      'islandora_chemistry_derive_medium',
    ),
    'file' => "$module_path/includes/derivatives.inc",
  );
  $derivatives['islandora_chemistry_tn'] = array(
    'source_dsid' => 'OBJ',
    'destination_dsid' => 'TN',
    'weight' => 2,
    'function' => array(
      'islandora_chemistry_derive_tn',
    ),
    'file' => "$module_path/includes/derivatives.inc",
  );
  $derivatives['islandora_chemistry_fingerprint'] = array(
    'source_dsid' => 'MOL',
    'destination_dsid' => NULL,
    'function' => array(
      'islandora_chemistry_derive_fingerprint',
    ),
    'file' => "$module_path/includes/derivatives.inc",
  );

  return $derivatives;
}

/**
 * Implements hook_file_mimetype_mapping_alter().
 *
 * Override mapping for chemical MIME-types, as some are mapped incorrectly,
 * such as ".gam" being mapped to "chemical/x-gamess-input", while its proper
 * mapping would be "chemical/x-gamess-output".
 */
function islandora_chemistry_file_mimetype_mapping_alter(&$mapping) {
  $mime_detect = new MimeDetect();
  $types = $mime_detect->getMimeTypes();
  $intersect = array_intersect_key($types, $mapping['extensions']);
  foreach ($intersect as $ext => $mime) {
    $keys = array_keys($mapping['mimetypes'], $mime);
    if (empty($keys)) {
      $mapping['mimetypes'][] = $mime;
      $keys = array_keys($mapping['mimetypes'], $mime);
    }
    $mapping['extensions'][$ext] = reset($keys);
  }
}

/**
 * Implements hook_process_islandora_solr_metadata_display().
 */
function islandora_chemistry_process_islandora_solr_metadata_display(array &$variables) {
  // Format molecular formulas.
  $formula_field = variable_get('islandora_chemistry_formula_solr_field', 'cml_molecule_metadataList_mods_note_formula_ms');
  if (isset($variables['solr_fields'][$formula_field]['value'])) {
    module_load_include('inc', 'islandora_chemistry', 'includes/utilities');
    $variables['solr_fields'][$formula_field]['value'] = array_map('islandora_chemistry_format_molecular_formula', $variables['solr_fields'][$formula_field]['value']);
  }
}

/**
 * Implements hook_islandora_bookmark_export_handler().
 */
function islandora_chemistry_islandora_bookmark_export_handler() {
  $handlers = array(
    'Chemistry' => array(
      'Export Chemical Data' => 'islandora_chemistry_export_bookmark_objects',
    ),
  );
  return $handlers;
}

/**
 * Implements hook_islandora_bookmark_export_handler_alter().
 */
function islandora_chemistry_islandora_bookmark_export_handler_alter(&$handlers) {
  $handlers = array_filter($handlers, function ($handler) {
    return key($handler) == 'Export Chemical Data';
  });
}

/**
 * Exports a bookmark list with associated OBJs and CMLs.
 *
 * @param array $pids
 *   An array of pids to be exported.
 */
function islandora_chemistry_export_bookmark_objects($pids) {
  $zip = new ZipArchive();
  $zip_uri = file_create_filename('chemistry_export.zip', 'temporary://');
  $open = $zip->open(drupal_realpath($zip_uri), ZipArchive::CREATE);
  if ($open === TRUE) {
    foreach ($pids as $pid) {
      $object = islandora_object_load($pid);
      $escaped_pid = str_replace(':', '_', $object->id);
      if (isset($object['OBJ'])) {
        module_load_include('inc', 'islandora', 'includes/mimetype.utils');
        $extension = islandora_get_extension_for_mimetype($object['OBJ']->mimetype);
        $zip->addFromString("{$escaped_pid}_OBJ.$extension", $object['OBJ']->content);
      }
      if (isset($object['CML'])) {
        $zip->addFromString("{$escaped_pid}_CML.xml", $object['CML']->content);
      }
    }
    $zip->close();
  }
  drupal_add_http_header('Content-Type', 'application/zip');
  drupal_add_http_header('Content-Disposition', 'attachment;filename="chemistry_export.zip"');
  readfile($zip_uri);
  drupal_exit();
}
